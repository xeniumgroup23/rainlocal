//border-radius starts
@mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
}

//usage
//@include border-radius(50%);
//border-radius ends
//
//
//
//
//
//Clearfix Starts
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

//usage
// @include clearfix;
//Clearfix Ends
//
//
//
//
//
//Hyphens Starts
@mixin hyphens($hyphens) {
    -webkit-hyphens: $hyphens;
    -ms-hyphens: $hyphens;
    hyphens: $hyphens;
}

//usage 
//@include hyphens(none);
//@include hyphens(manual);
//@include hyphens(auto);
//Hyphens Ends
//
//
//
//
//
//Bootstrap 5 Responsive viewport starts
@mixin bp-xxl {
    @media only screen and (min-width: 1400px) {
        @content;
    }
}

@mixin bp-xl {
    @media only screen and (min-width: 1200px) {
        @content;
    }
}

@mixin bp-lg {
    @media only screen and (min-width: 992px) {
        @content;
    }
}

@mixin bp-md {
    @media only screen and (min-width: 768px) {
        @content;
    }
}

@mixin bp-sm {
    @media only screen and (min-width: 576px) {
        @content;
    }
}

@mixin bp-xl-down {
    @media only screen and (max-width: 1399.98px) {
        @content;
    }
}

//Breakpoints Down
@mixin bp-lg-down {
    @media only screen and (max-width: 1199.98px) {
        @content;
    }
}

@mixin bp-md-down {
    @media only screen and (max-width: 991.98px) {
        @content;
    }
}

@mixin bp-sm-down {
    @media only screen and (max-width: 767.98px) {
        @content;
    }
}

@mixin bp-xs-down {
    @media only screen and (max-width: 575.98px) {
        @content;
    }
}

//Between Breakpoints
@mixin bp-md-xl {
    @media (min-width: 768px) and (max-width: 1199.98px) {
        @content;
    }
}

@mixin bp-md-lg {
    @media (min-width: 768px) and (max-width: 991.98px) {
        @content;
    }
}

@mixin bp-sm-xl {
    @media (min-width: 576px) and (max-width: 1199.98px) {
        @content;
    }
}

@mixin bp-sm-lg {
    @media (min-width: 576px) and (max-width: 991.98px) {
        @content;
    }
}

@mixin bp-sm-md {
    @media (min-width: 576px) and (max-width: 767.98px) {
        @content;
    }
}

//Bootstrap 5 Responsive viewport ends
//
//
//
//
//
//box-shadow starts
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    }
    @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

@mixin box-shadow-none() {
    -webkit-box-shadow: none !important;
    -moz-box-shadow: none !important;
    box-shadow: none !important;
}

//useage
//@include box-shadow( 0, 1px, 5px, black);
//@include box-shadow(inset 0, 1px, 5px, black);
//box-shadow ends
//
//
//
//rotate starts
@mixin rotate($degrees) {
    transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -webkit-transform: rotate($degrees);
}

//rotate ends
//
//
//
//
//
//
//
//
//
//
//
//
//skew starts
@mixin skew($degrees) {
    transform: skew($degrees);
    -ms-transform: skew($degrees);
    -webkit-transform: skew($degrees);
}

@mixin skewX($degrees) {
    transform: skewX($degrees);
    -ms-transform: skewX($degrees);
    -webkit-transform: skewX($degrees);
}

@mixin skewY($degrees) {
    transform: skewY($degrees);
    -ms-transform: skewY($degrees);
    -webkit-transform: skewY($degrees);
}

//skew ends
//scale starts
@mixin scale($scale) {
    transform: scale($scale);
    -ms-transform: scale($scale);
    -webkit-transform: scale($scale);
}

//scale ends
//transition starts
@mixin transition($property: all, $duration: 0.15s, $timing: ease-in-out) {
    transition: $property $duration $timing;
    -webkit-transition: #{$property} $duration $timing;
    -moz-transition: #{$property} $duration $timing;
    -ms-transition: #{$property} $duration $timing;
    -o-transition: #{$property} $duration $timing;
}

@mixin transition2($property: width, $duration: 1s, $timing: ease-in-out) {
    transition: $property $duration $timing;
    -webkit-transition: #{$property} $duration $timing;
    -moz-transition: #{$property} $duration $timing;
    -ms-transition: #{$property} $duration $timing;
    -o-transition: #{$property} $duration $timing;
}

@mixin transition3($property: all, $duration: .5s, $timing: ease-in-out) {
    transition: $property $duration $timing;
    -webkit-transition: #{$property} $duration $timing;
    -moz-transition: #{$property} $duration $timing;
    -ms-transition: #{$property} $duration $timing;
    -o-transition: #{$property} $duration $timing;
}

@mixin transition-mouse-animate() {
    animation-name: scroll;
    -webkit-animation-name: scroll;
    animation-duration: 1.5s;
    -webkit-animation-duration: 1.5s;
    animation-iteration-count: infinite;
    -webkit-animation-iteration-count: infinite;
}

//
// Position Center Starts
@mixin centerz($horizontal: true, $vertical: true) {
    position: absolute;
    @if ($horizontal and $vertical) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
    }
    @else if ($horizontal) {
        left: 50%;
        transform: translate(-50%, 0);
        -webkit-transform: translate(-50%, 0);
        -moz-transform: translate(-50%, 0);
        -o-transform: translate(-50%, 0);
    }
    @else if ($vertical) {
        top: 50%;
        transform: translate(0, -50%);
        -webkit-transform: translate(0, -50%);
        -moz-transform: translate(0, -50%);
        -o-transform: translate(0, -50%);
    }
}

//How to Use
//@include centerz(true, false);
//@include centerz(true, true);
//more
//Position Center Ends
//
@mixin translateX($translateX) {
    -webkit-transform: translateX($translateX);
    -moz-transform: translateX($translateX);
    -o-transform: translateX($translateX);
    transform: translateX($translateX);
}

@mixin translateY($translateY) {
    -webkit-transform: translateY($translateY);
    -moz-transform: translateY($translateY);
    -o-transform: translateY($translateY);
    transform: translateY($translateY);
}

//transition ends
//flexbox starts
@mixin inline-flex() {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -moz-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

// Flexbox display
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
    -webkit-flex-flow: $flow;
    -moz-flex-flow: $flow;
    -ms-flex-flow: $flow;
    flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
    -webkit-flex-grow: $grow;
    -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
    flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
    -webkit-flex-shrink: $shrink;
    -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
    flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
    -webkit-flex-basis: $width;
    -moz-flex-basis: $width;
    -ms-flex-basis: $width;
    flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
    -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
    -webkit-align-content: $align;
    -moz-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    -ms-flex-align: $align;
    align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
    -webkit-align-self: $align;
    -moz-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}

//flexbox ends
//
//
//
//
//
//
//Opacity Starts
@mixin opacity($value) {
    $IEValue: $value*100;
    opacity: $value;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
    filter: alpha(opacity=$IEValue);
}

//Opacity Ends
//
//
//
//
//
//
//Vertical Gradient Starts
@mixin gradient-vertical($startColor: #ff0101, $endColor: #d3010f) {
    background-color: mix($startColor, $endColor, 60%);
    background-image: -moz-linear-gradient(top, $startColor, $endColor);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image: -o-linear-gradient(top, $startColor, $endColor);
    background-image: linear-gradient(to bottom, $startColor, $endColor);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}

//Vertical Gradient Ends
//
//
//
//
//
//
//
// This is the mixins for placeholder
@mixin placeholder {
     ::-webkit-input-placeholder {
        @content
    }
     :-moz-placeholder {
        @content
    }
     ::-moz-placeholder {
        @content
    }
     :-ms-input-placeholder {
        @content
    }
}